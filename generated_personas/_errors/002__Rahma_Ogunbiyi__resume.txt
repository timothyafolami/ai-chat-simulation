Rahma Ogunbiyi — QA Engineer | Casablanca, MA | Full‑time | Africa/Nairobi

Professional Summary (to QA Lead / EM): Experienced qa engineer delivering measurable outcomes;
comfortable operating with ambiguity and turning strategy into execution for QA Lead / EM.

Core Skills: Test Strategy, Automation, Playwright, Cypress, API Testing, Load Testing

Selected Achievements: - Delivered initiative that improved key KPI by 17% within 93 days. -
Reduced cost or waste by 62% via process redesign and better instrumentation. - Cut
time‑to‑value for users by 63% using simpler defaults and progressive disclosure. - Managed
budgets totaling $383,074 while upholding governance and auditability.

Case Study: Reduced escaped defects by 10% via risk‑based testing. Approach: defined signals,
ran small probes, measured deltas, and scaled the chosen path. Risks were mapped with
mitigations, and results were tied to user‑visible outcomes.

Case Study: Set up contract tests that stabilized integrations across services. Approach:
defined signals, ran small probes, measured deltas, and scaled the chosen path. Risks were
mapped with mitigations, and results were tied to user‑visible outcomes.

Methods & Toolkits: Causal Inference, Discovery, Critical Path, Agile, Incident Response, OKRs.

Collaboration & Leadership: operates with analytical and systems‑oriented style; prefers clear
SLOs, decision logs, and transparent trade‑off discussions. Mentors peers through pairing and
concise narrative docs.

First 90 Days: discover constraints and goals; design pragmatic architecture/process; deliver a
thin vertical slice; instrument and iterate; establish rituals that keep cross‑functional
alignment healthy.

Education: BA in a relevant field. Certifications: CISSP, Tableau Desktop, CFA Level I.

Talks & Publications: presented Scaling Insight Engines (2021); occasional contributor to
professional forums.

I optimize for readable code, humane processes, and clear accountability. Unknowns are surfaced
early through probes and spikes instead of being buried in large PRs. Runbooks, SLOs, and
dashboards turn firefighting into routine operations. We keep error budgets honest and let data
guide iteration pace. I treat documentation as a product and keep stakeholders aligned with
crisp updates. Runbooks, SLOs, and dashboards turn firefighting into routine operations. We
delete what we no longer need—simplicity compounds as a strategic advantage. We delete what we
no longer need—simplicity compounds as a strategic advantage. Unknowns are surfaced early
through probes and spikes instead of being buried in large PRs. In practice, qa engineer resumes
and audience‑specific narratives starts with clarifying outcomes, constraints, and the signals
we will observe. I optimize for readable code, humane processes, and clear accountability. We
delete what we no longer need—simplicity compounds as a strategic advantage. Runbooks, SLOs, and
dashboards turn firefighting into routine operations. Unknowns are surfaced early through probes
and spikes instead of being buried in large PRs. We delete what we no longer need—simplicity
compounds as a strategic advantage.

We keep error budgets honest and let data guide iteration pace. In practice, qa engineer resumes
and audience‑specific narratives starts with clarifying outcomes, constraints, and the signals
we will observe. We delete what we no longer need—simplicity compounds as a strategic advantage.
Runbooks, SLOs, and dashboards turn firefighting into routine operations. I translate complexity
into decisions that teams can act on. I optimize for readable code, humane processes, and clear
accountability. We delete what we no longer need—simplicity compounds as a strategic advantage.
In practice, qa engineer resumes and audience‑specific narratives starts with clarifying
outcomes, constraints, and the signals we will observe. We keep error budgets honest and let
data guide iteration pace. We delete what we no longer need—simplicity compounds as a strategic
advantage. In practice, qa engineer resumes and audience‑specific narratives starts with
clarifying outcomes, constraints, and the signals we will observe. We delete what we no longer
need—simplicity compounds as a strategic advantage. I optimize for readable code, humane
processes, and clear accountability. Unknowns are surfaced early through probes and spikes
instead of being buried in large PRs.

Runbooks, SLOs, and dashboards turn firefighting into routine operations. We delete what we no
longer need—simplicity compounds as a strategic advantage. Unknowns are surfaced early through
probes and spikes instead of being buried in large PRs. We keep error budgets honest and let
data guide iteration pace. I treat documentation as a product and keep stakeholders aligned with
crisp updates. Unknowns are surfaced early through probes and spikes instead of being buried in
large PRs. I optimize for readable code, humane processes, and clear accountability. In
practice, qa engineer resumes and audience‑specific narratives starts with clarifying outcomes,
constraints, and the signals we will observe. I optimize for readable code, humane processes,
and clear accountability. We keep error budgets honest and let data guide iteration pace. We
keep error budgets honest and let data guide iteration pace. We delete what we no longer
need—simplicity compounds as a strategic advantage. In practice, qa engineer resumes and
audience‑specific narratives starts with clarifying outcomes, constraints, and the signals we
will observe. We delete what we no longer need—simplicity compounds as a strategic advantage. I
optimize for readable code, humane processes, and clear accountability.

In practice, qa engineer resumes and audience‑specific narratives starts with clarifying
outcomes, constraints, and the signals we will observe. Unknowns are surfaced early through
probes and spikes instead of being buried in large PRs. Runbooks, SLOs, and dashboards turn
firefighting into routine operations. I optimize for readable code, humane processes, and clear
accountability. I treat documentation as a product and keep stakeholders aligned with crisp
updates. In practice, qa engineer resumes and audience‑specific narratives starts with
clarifying outcomes, constraints, and the signals we will observe. In practice, qa engineer
resumes and audience‑specific narratives starts with clarifying outcomes, constraints, and the
signals we will observe. We keep error budgets honest and let data guide iteration pace. We keep
error budgets honest and let data guide iteration pace. Unknowns are surfaced early through
probes and spikes instead of being buried in large PRs. I optimize for readable code, humane
processes, and clear accountability. In practice, qa engineer resumes and audience‑specific
narratives starts with clarifying outcomes, constraints, and the signals we will observe.
Runbooks, SLOs, and dashboards turn firefighting into routine operations. I optimize for
readable code, humane processes, and clear accountability.

I optimize for readable code, humane processes, and clear accountability. Unknowns are surfaced
early through probes and spikes instead of being buried in large PRs. We keep error budgets
honest and let data guide iteration pace. Runbooks, SLOs, and dashboards turn firefighting into
routine operations. Security and privacy are embedded in design, not bolted on later. We keep
error budgets honest and let data guide iteration pace. Unknowns are surfaced early through
probes and spikes instead of being buried in large PRs. I optimize for readable code, humane
processes, and clear accountability. Unknowns are surfaced early through probes and spikes
instead of being buried in large PRs. We delete what we no longer need—simplicity compounds as a
strategic advantage. Unknowns are surfaced early through probes and spikes instead of being
buried in large PRs. We delete what we no longer need—simplicity compounds as a strategic
advantage. Unknowns are surfaced early through probes and spikes instead of being buried in
large PRs. We keep error budgets honest and let data guide iteration pace. Runbooks, SLOs, and
dashboards turn firefighting into routine operations.

We keep error budgets honest and let data guide iteration pace. I optimize for readable code,
humane processes, and clear accountability. Unknowns are surfaced early through probes and
spikes instead of being buried in large PRs. We delete what we no longer need—simplicity
compounds as a strategic advantage. I treat documentation as a product and keep stakeholders
aligned with crisp updates. We keep error budgets honest and let data guide iteration pace. In
practice, qa engineer resumes and audience‑specific narratives starts with clarifying outcomes,
constraints, and the signals we will observe. We keep error budgets honest and let data guide
iteration pace. In practice, qa engineer resumes and audience‑specific narratives starts with
clarifying outcomes, constraints, and the signals we will observe. I optimize for readable code,
humane processes, and clear accountability. Unknowns are surfaced early through probes and
spikes instead of being buried in large PRs. In practice, qa engineer resumes and
audience‑specific narratives starts with clarifying outcomes, constraints, and the signals we
will observe. Unknowns are surfaced early through probes and spikes instead of being buried in
large PRs.

We delete what we no longer need—simplicity compounds as a strategic advantage. Runbooks, SLOs,
and dashboards turn firefighting into routine operations. I optimize for readable code, humane
processes, and clear accountability. In practice, qa engineer resumes and audience‑specific
narratives starts with clarifying outcomes, constraints, and the signals we will observe. I
value experiments over debates; prototypes settle arguments. I optimize for readable code,
humane processes, and clear accountability. We delete what we no longer need—simplicity
compounds as a strategic advantage. We delete what we no longer need—simplicity compounds as a
strategic advantage. In practice, qa engineer resumes and audience‑specific narratives starts
with clarifying outcomes, constraints, and the signals we will observe. We keep error budgets
honest and let data guide iteration pace. We keep error budgets honest and let data guide
iteration pace. We delete what we no longer need—simplicity compounds as a strategic advantage.
Runbooks, SLOs, and dashboards turn firefighting into routine operations. We keep error budgets
honest and let data guide iteration pace. We keep error budgets honest and let data guide
iteration pace. Unknowns are surfaced early through probes and spikes instead of being buried in
large PRs.